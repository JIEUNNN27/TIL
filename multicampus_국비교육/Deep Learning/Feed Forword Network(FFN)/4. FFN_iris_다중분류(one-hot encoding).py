# -*- coding: utf-8 -*-
"""코드연습5 - 아이리스데이터(다중 분류).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A9c8oLUHHMIXNL28h8LuC37h_ooY5xQU

sigmoid -> binary_crossentropy


softmax -> categorical_crossentropy
"""

from sklearn.datasets import load_iris

from tensorflow.keras.layers import Input, Dense
from tensorflow.keras import Model
from tensorflow.keras.utils import to_categorical

from sklearn.model_selection import train_test_split

iris = load_iris()

x_feat = iris['data']
y_target = iris['target'].reshape(-1, 1)

#y 데이터에 one-hot encoding을 해준다

y_onehot = to_categorical(y_target)

x_train, x_test, y_train, y_test = train_test_split(x_feat, y_onehot, test_size = 0.2)

xInput = Input(batch_shape = (None, x_train.shape[1]))

hLayer = Dense(10)(xInput)

yOutput = Dense(y_train.shape[1], activation = "softmax")(hLayer)

model = Model(xInput, yOutput)

model.compile(loss = 'categorical_crossentropy', optimizer = 'adam')

model.fit(x_train, y_train, epochs = 100)

y_prob = model.predict(x_test)

y_pred = (y_prob>0.5).astype('int8')

acc = (y_test == y_pred).sum()/y_test.shape[0]
acc = (y_test == y_pred).mean()
print(acc)