# -*- coding: utf-8 -*-
"""코드 연습2 - hLayer 5개 쌓기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mhtqRsoGo2Gr_s5op-7TmYm4V5L-NzmS

#안보고 할 수 있을 때까지 외우기!
"""

from tensorflow.keras.layers import Input, Dense
from tensorflow.keras import Model

from sklearn.datasets import load_breast_cancer

from sklearn.model_selection import train_test_split

cancer = load_breast_cancer()

x_feat = cancer['data']
y_target = cancer['target'].reshape(-1, 1)

x_train, x_test, y_train, y_test = train_test_split(x_feat, y_target, test_size = 0.2)

xInput = Input(batch_shape = (None, x_train.shape[1]))

"""#이부분이다!!"""

#hLayer 1개
#hLayer = Dense(10)(xInput)

#hLayer 5개 쌓기
#첫번째 방법
hLayer = Dense(10)(xInput)
hLayer1 = Dense(10)(hLayer)
hLayer2 = Dense(10)(hLayer1)
hLayer3 = Dense(10)(hLayer2)
hLayer4 = Dense(10)(hLayer3)

"""아니면 이렇게 이름이 똑같아도 된다!
```
#두번째 방법
hLayer = Dense(10)(xInput)
hLayer = Dense(10)(hLayer)
hLayer = Dense(10)(hLayer)
hLayer = Dense(10)(hLayer)
hLayer = Dense(10)(hLayer)

```

```
#세번째 방법
#포문으로 돌리기
hLayer = Dense(10)(xInput)
for i in range(4):
  hLayer = Dense(10)(hLayer)
```

---
"""

yOutput = Dense(y_train.shape[1], activation = "sigmoid")(hLayer4)

model = Model(xInput, yOutput)

model.compile(loss = 'binary_crossentropy', optimizer = 'adam')

model.fit(x_train, y_train, epochs = 100)

y_prob = model.predict(x_test)

y_pred = (y_prob>0.5).astype('int8')

acc = (y_test == y_pred).sum()/y_test.shape[0]
acc = (y_test == y_pred).mean()
print(acc)

